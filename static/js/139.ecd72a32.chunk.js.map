{"version":3,"file":"static/js/139.ecd72a32.chunk.js","mappings":"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","sources":["webpack://social-network/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://social-network/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://social-network/./src/components/Profile/MyPosts/Posts/Post.module.css?5aca","components/Profile/MyPosts/Posts/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","hoc/withAuthRedirect.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__szKwm\",\"mainPhoto\":\"ProfileInfo_mainPhoto__bJ2pA\"};","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\n\r\n\r\ntype ProfileStatusPropsType = {\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\n\r\nexport const ProfileStatus = (props: ProfileStatusPropsType) => {\r\n\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [status, setStatus] = useState<string>(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deActivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || 'No status'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deActivateEditMode} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {ProfileContainerType} from \"../ProfileContainer\";\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\nimport usersPhoto from \"../../../assets/imeges/avatar.jpg\";\r\n\r\ntype ProfileInfoPropsType = {\r\n    profile: ProfileContainerType | null\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\n\r\nexport const ProfileInfo: React.FC<ProfileInfoPropsType> = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || usersPhoto} alt={'profile photo'} className={s.mainPhoto}/>\r\n                <ProfileStatus status={status} updateStatus={updateStatus}/>\r\n                <div>\r\n                    {profile.aboutMe}\r\n                </div>\r\n                ava+description\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__7DRIy\",\"posts\":\"MyPosts_posts__LSqoW\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__oakdJ\"};","import React from \"react\";\r\nimport s from \"./Post.module.css\"\r\n\r\ntype PostsPropsType = {\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\nexport const Post = (props: PostsPropsType) => {\r\n    return (\r\n        <div className={s.content}>\r\n            <div className={s.item}>\r\n                <img\r\n                    src=\"https://cdn.vox-cdn.com/thumbor/W6YyHkPAoXd8VGz2OGMjqkWWM7E=/0x0:2370x1574/1400x1400/filters:focal(1185x787:1186x788)/cdn.vox-cdn.com/uploads/chorus_asset/file/20103707/Screen_Shot_2020_07_21_at_9.38.25_AM.png\"/>\r\n                <span>{props.message}</span>\r\n                <div>\r\n                    <span>{props.likesCount}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\"\r\nimport {Post} from \"./Posts/Post\";\r\nimport {PostsType} from \"../../../redux/state\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Element} from \"../../../components/common/FormsControls/FormsControls\";\r\n\r\ntype MyPostsPropsType = {\r\n    addPost: (value:string) => void\r\n    posts: PostsType[]\r\n\r\n}\r\n\r\nexport const  MyPosts= React.memo((props: MyPostsPropsType) =>{\r\n\r\n    const postsElements = props.posts.map((p, index) =>\r\n        <Post key={index} message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    const onAddPost = (value: PostFormType) => {\r\n        props.addPost(value.post)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <div>\r\n                <h3>My post</h3>\r\n                <MyPostReduxForm onSubmit={onAddPost}/>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\ntype PostFormType = {\r\n    post:string\r\n}\r\nconst maxLength10 = maxLengthCreator(10)\r\nconst MyPostForm: React.FC<InjectedFormProps<PostFormType>> = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field as='textarea' component={Element} placeholder={'Post'} name={'post'} validate={[required,maxLength10]}/>\r\n            <div>\r\n                <button type={'submit'}>Add Post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst MyPostReduxForm = reduxForm<PostFormType>({\r\n    form: 'post'\r\n})(MyPostForm)","import {addPostAC, InitialStateType} from \"../../../redux/profileReducer\";\r\nimport {MyPosts} from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redaxStore\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\ntype MapStatePropsType = InitialStateType\r\n\r\n\r\ntype MapDispatchPropsType = {\r\n    addPost: (newPost: string) => void\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n    return {\r\n        addPost: (newPost: string) => {\r\n            dispatch(addPostAC(newPost))\r\n        }\r\n    }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)","import React from \"react\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileContainerType} from \"../../components/Profile/ProfileContainer\";\r\n\r\ntype ProfilePropsType ={\r\n    profile: ProfileContainerType | null\r\n    status: string\r\n    updateStatus: (status:string)=>void\r\n}\r\n\r\n\r\nexport const Profile = (props:ProfilePropsType) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer  />\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redaxStore\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profileReducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\ntype ContactsType = {\r\n    facebook: string\r\n    website: string\r\n    vk: string\r\n    twitter: string\r\n    instagram: string\r\n    youtube: string\r\n    github: string\r\n    mainLink: string\r\n\r\n}\r\ntype PhotosType = {\r\n    small: string | null\r\n    large: string\r\n}\r\nexport type ProfileContainerType = {\r\n    aboutMe: string\r\n    contacts: ContactsType\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string,\r\n    fullName: string\r\n    id: number | null\r\n    photos: PhotosType\r\n}\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\ntype MapDispatchPropsType = {\r\n    getUserProfile: (id: number) => void\r\n    getStatus: (id: number) => void\r\n    updateStatus: (status: string) => void\r\n}\r\ntype MapStatePropsType = {\r\n    profile: ProfileContainerType | null,\r\n    status: string\r\n    authorizedUserId: number | null\r\n}\r\ntype OwnPropsType = MapDispatchPropsType & MapStatePropsType\r\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\r\n\r\n\r\nclass ProfileContainer extends React.Component<PropsType, OwnPropsType> {\r\n    refreshProfile = () => {\r\n        let userId = Number(this.props.match.params.userId)\r\n        if (!userId && this.props.authorizedUserId) {\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps:Readonly<PropsType>) {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId ) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile  {...this.props} profile={this.props.profile} status={this.props.status}\r\n                      updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withAuthRedirect,\r\n    withRouter,\r\n)(ProfileContainer)\r\n","import React, {ComponentType} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redaxStore\";\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n    const RedirectComponent = (props: MapStateToPropsType) => {\r\n\r\n        let {isAuth, ...rest} = props\r\n\r\n        if (!isAuth) return <Redirect to='/login'/>\r\n        return <Component {...rest as T}/>\r\n    }\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}\r\n\r\n\r\n// type\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n}"],"names":["ProfileStatus","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","src","photos","large","usersPhoto","alt","aboutMe","Preloader","Post","message","likesCount","MyPosts","React","postsElements","posts","map","p","index","MyPostReduxForm","onSubmit","addPost","post","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","as","component","Element","placeholder","name","validate","required","type","MyPostsContainer","connect","state","profilePage","dispatch","newPost","addPostAC","Profile","ProfileContainer","refreshProfile","userId","Number","match","params","authorizedUserId","history","push","getUserProfile","getStatus","this","prevProps","compose","auth","id","withAuthRedirect","withRouter","mapStateToProps","isAuth","Component","rest","to"],"sourceRoot":""}